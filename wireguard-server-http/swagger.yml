swagger: "2.0"
info:
  description: "Wireguard Rest Like API"
  version: "1.0.0"
  title: "go-wg-admin"
basePath: "/"
schemes:
  - "http"
paths:
  /public/v1/ticket:
    post:
      tags:
        - "Ticket"
        - "Public"
      summary: "Create Ticket"
      description: "Create a new Ticket, used by clients"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: TicketRequest
          schema:
            $ref: '#/definitions/TicketRequest'
      responses:
        200:
          description: "List of Tickets"
          schema:
            $ref: '#/definitions/TicketPublic'
        500:
          description: "The Service has an error"
  /public/v1/ticket/{ticketID}:
    get:
      tags:
        - "Ticket"
        - "Public"
      summary: "Get Ticket Info"
      description: "Return Public Ticket Info for given ticket"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: publicKey
          type: string
          required: true
          description: Public Key
        - in: path
          required: true
          name: ticketID
          type: string
          description: Ticket ID
      responses:
        200:
          description: "List of Tickets"
          schema:
            type: "object"
            properties:
              ticket:
                $ref: '#/definitions/TicketPublic'
              server:
                type: array
                description: Currently return one Server
                items:
                  $ref: '#/definitions/Server'
        400:
          description: "Public Key Missing or Wrong"
        500:
          description: "The Service has an error"
  /api/v1/ticket:
    get:
      tags:
        - "Ticket"
      summary: "List Tickets"
      description: "Return a list of all Tickets with all Informations"
      produces:
        - "application/json"
      responses:
        200:
          description: "List of Tickets"
          schema:
            type: array
            items:
              $ref: '#/definitions/Ticket'

        500:
          description: "The Service has an error"

definitions:
  Server:
    type: "object"
    properties:
      hostname:
        type: "string"
        description: "Hostname of the Server"
      allowdIP:
        type: "string"
        description: "List of Allowd IPS with Subnet"
        example: "10.42.42.0/24"
      publicKey:
        type: "string"
        description: "Server Public Key"
  Ticket:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Autoincrement ID from DB"
        example: 1
      ticketID:
        type: "string"
        description: "UUID for the Ticket"
        example: "asdf8q904ghuo"
      status:
        type: "string"
        enum: ['new', 'approved', 'denied', 'rejected']
        description: "Status of the Ticket"
        example: "approved"
      publicKey:
        type: "string"
        description: "Pubkic Key from the Client"
        example: "+a5d1tw7YQC//FEmhAPsb1PKgWw18GIVFW2Bixm2nio="
      publicIP:
        type: "string"
        description: "IP from the Ticket create Request"
        example: "192.168.1.1"
      hostname:
        type: "string"
        description: "Hostname send by the ticket creation"
        example: "clientHostname"
      internIpv4:
        type: "string"
        description: "Internal IPv4 address, generated by ticket approv"
        example: "10.42.42.42/32"
  TicketPublic:
    type: "object"
    properties:
      ticketID:
        type: "string"
        description: "UUID for the Ticket"
        example: "asdf8q904ghuo"
      status:
        type: "string"
        enum: ['new', 'approved', 'denied', 'rejected']
        description: "Status of the Ticket"
        example: "approved"
      internIpv4:
        type: "string"
        description: "Internal IPv4 address, generated by ticket approv"
        example: "10.42.42.42/32"
  TicketRequest:
    type: "object"
    properties:
      publicKey:
        type: "string"
        description: "Pubkic Key from the Client"
        example: "+a5d1tw7YQC//FEmhAPsb1PKgWw18GIVFW2Bixm2nio="
      hostname:
        type: "string"
        description: "Hostname send by the ticket creation"
        example: "clientHostname"
